plugins {
    id 'org.springframework.boot' version '3.5.6'
    id 'io.spring.dependency-management' version '1.1.7'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

dependencies {

    implementation project(':common')
    implementation project(':service')
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
    implementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'mysql:mysql-connector-java:8.0.33'

    // AssertJ
    testImplementation "org.assertj:assertj-core:3.24.2"

    // TestNG
    testImplementation "org.testng:testng:7.11.0"

    testImplementation("io.rest-assured:rest-assured:5.4.0")

    //selenium
    implementation("org.seleniumhq.selenium:selenium-java:4.35.0") {
        exclude group: "org.apache.httpcomponents.core5", module: "httpcore5"
        exclude group: "org.apache.httpcomponents.core5", module: "httpcore5-h2"
        // also if needed exclude client5 etc.
    }
     implementation "io.github.bonigarcia:webdrivermanager:6.3.2"

    // HttpClient 5.3.x is required for TlsSocketStrategy
    implementation "org.apache.httpcomponents.client5:httpclient5:5.4.4"
    implementation "org.apache.httpcomponents.core5:httpcore5:5.3.6"    // or other latest 5.3.x


    // JUnit 5 + 4
    // testImplementation "org.junit.jupiter:junit-jupiter:5.10.2"
    testImplementation "junit:junit:4.13.2"

    // Mockito
    testImplementation "org.mockito:mockito-core:5.11.0"

    //Cucumber
    testImplementation("io.cucumber:cucumber-java:7.27.2")
    testImplementation("io.cucumber:cucumber-junit:7.27.2")

   implementation("org.wiremock.integrations:wiremock-spring-boot:3.10.6")
}



tasks.register('runSimple', JavaExec) {
    group = "application"
    description = "Run the Spring Boot application in a simple way"

    classpath = sourceSets.main.runtimeClasspath
    mainClass = "com.cog.webapp.SpringBootLauncer"  // replace with your @SpringBootApplication class

    // Pass arguments if needed
    // args = ["--spring.profiles.active=dev"]
}



//springBoot {
//    mainClass = 'com.cog.webapp.SpringBootLauncer'
//}

//bootJar {
//    archiveFileName = 'webapp.jar'
//}

bootRun {
    jvmArgs = [
            "-javaagent:${project.rootDir}/newrelic/newrelic.jar"
    ]
}

tasks.withType(Test).configureEach {
    //useJUnitPlatform()
    testLogging {
        events("passed", "skipped", "failed")
    }

    def suiteName = hasProperty("suitename") ? property("suitename") : "testng.xml"
    def suiteFile = file("src/test/resources/${suiteName}")

   useTestNG {
        suites suiteFile
        suites 'src/test/resources/testng.xml'
   }
}