buildscript {
    repositories {
        gradlePluginPortal()  // This is required for plugin resolution
        mavenCentral()
        mavenLocal()
    }
    dependencies {
        classpath 'com.diffplug.spotless:spotless-plugin-gradle:6.25.0'
    }
}

plugins {
    id 'io.spring.dependency-management' version '1.1.4'
    id 'java'
    id "de.undercouch.download" version "5.3.0"
    id "org.sonarqube" version "4.4.1.3373"
    id "jacoco"
}


allprojects {
    group = 'com.cog'
    version = '1.0.0'

    repositories {
        mavenCentral()
    }
}

tasks.register('downloadNewrelic', Download) {
    mkdir 'newrelic'
    src 'https://download.newrelic.com/newrelic/java-agent/newrelic-agent/current/newrelic-java.zip'
    dest file('newrelic')
}

tasks.register('unzipNewrelic', Copy) {
    from zipTree("newrelic/newrelic-java.zip")
    into layout.buildDirectory.dir("newrelic-agent")
    doNotTrackState("Unzipping agent without incremental tracking")
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'com.diffplug.spotless'
    apply plugin: 'jacoco'


    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:3.1.10"
        }
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'com.googlecode.json-simple:json-simple:1.1.1'
    }

    spotless {
        java {
            googleJavaFormat()
            importOrder()
            removeUnusedImports()
            trimTrailingWhitespace()
            endWithNewline()
        }
    }

    test {
        useJUnitPlatform()
        finalizedBy jacocoTestReport
    }


    jacocoTestReport {
        dependsOn test
        reports {
            xml.required = true
            html.required = true
        }
    }
}

sonar {
    properties {
        property "sonar.projectKey", "my-springboot-app"
        property "sonar.host.url", "http://localhost:9000"
        property "sonar.login", "squ_6074b0342ac8d552745edf55c61ee6526d89e6e4"
    }
}


sonar {
    properties {
        property "sonar.projectKey", "my-springboot-app"
        property "sonar.projectName", "My Spring Boot App"
        property "sonar.host.url", "http://localhost:9000"
        property "sonar.login",  "squ_6074b0342ac8d552745edf55c61ee6526d89e6e4" //System.getenv("SONAR_TOKEN") // safer than hardcoding

        // coverage reports
        property "sonar.junit.reportPaths", "build/test-results/test"
        property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/test/jacocoTestReport.xml"
    }
}